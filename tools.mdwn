# Nit Tools

### The Compiler `nitc`

`nitc` is the current official Nit compiler.
It takes the main module of a Nit program as argument and produce an executable file.

usage:

    nitc [options] file...

Important options:

    -q, --quiet                     Do not show warnings
    -v, --verbose                   Verbose
    -I, --path                      Set include path for loaders (may be used more than once)
    --only-metamodel                Stop after meta-model processing
    --global                        Use global compilation
    -o, --output                    Output file
    -O, --boost                     Optimize compilation
    --no-cc                         Do not invoke C compiler

Internally, nitc rely on the presence of a C compiler. Usually [[gcc|http://gcc.gnu.org/]] (but nitc was successfully tested with [[clang|http://clang.llvm.org/]] and [[icc|http://software.intel.com/en-us/articles/intel-compilers/]]).



### The documentation generator `nitdoc`

`nitdoc` takes one or more modules and generate a HTML documentation for these modules and their imported modules.

The [[documentation of the Nit standard library|http://nitlanguage.org/doc/stdlib/]] is generated with this tool.

usage:

    nitdoc [options] file...

important options:

    --public                 Generate only the public API
    --private                Generate the private API
    -d, --dir                Directory where doc is generated
    --source                 What link for source (%f for filename, %l for first line, %L for last line)
    --custom-title           Title displayed in the top of the Overview page and as suffix of all page names
    --custom-menu-items      Items displayed in menu before the 'Overview' item 
                             (Each item must be enclosed in 'li' tags)
    --custom-overview-text   Text displayed as introduction of Overview page before the modules list
    --custom-footer-text     Text displayed as footer of all pages

Internally, nitdoc rely on the presence of the `dot' command from the [[graphviz|http://www.graphviz.org]] programs. (if the dot program is not present or not found, no image of hierarchies are generated).

The documentation is extracted from the comments found above the definition of modules, classes, and properties.
Comments are displayed verbatim inside a \<pre> HTML element. Currently there is no recognized format nor specific annotation.

### The stub generator `nits`

`nits` helps the development of hybrid modules used in the native interface of nit. See [[native interface]] for more details.

### The interpreter `nit`

`nit` is the work-in-progress interpreter.
Currently it is only functional on a subset of the Nit language.

### The debugger

`nit` is the debugger, based on the interpreter, it is a work in progress bound to the same limitations as the latter.

See [[debugger]] for more details

### Network Debugger

`netdbg` and `dbgcli` are the server and client sides for the Nit network debugger, they are based on the same framework as the debugger except that they can be used from a remote location.

See [[debugger]] for more details

### The global compiler `nitg`

`nitg` is a work-in-progress global compiler that uses some hard static compilation techniques.
Currently it is only functional on a subset of the Nit language.

### The statistics collector `nitstats`

`nitstats` gathers some statistics about a Nit programs or modules.

It counts various number of entities and generates some graphs (with graphviz)
